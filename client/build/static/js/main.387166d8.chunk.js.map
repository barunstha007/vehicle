{"version":3,"sources":["components/UserRegistration.js","components/Login.js","components/Navigation.js","components/CurrentBooking.js","components/Home.js","components/InQueue.js","components/Config.js","components/ServiceLocation.js","App.js","serviceWorker.js","index.js"],"names":["Copyright","Typography","variant","color","align","Link","href","Date","getFullYear","useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignUp","classes","useState","name","phone","email","location","username","password","errors","state","setstate","Container","component","maxWidth","className","Avatar","onSubmit","e","register","axios","post","then","req","console","log","data","catch","err","response","error","preventDefault","role","Grid","container","item","xs","TextField","value","onChange","target","autoComplete","required","fullWidth","id","label","autoFocus","type","Button","justify","Box","mt","SignIn","user","FormControlLabel","control","Checkbox","Navigation","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","style","createData","calories","fat","carbs","protein","rows","desc","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","indeterminate","checked","inputProps","map","headCell","key","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","root","paddingLeft","paddingRight","highlight","text","primary","dark","title","flex","EnhancedTableToolbar","Toolbar","clsx","marginBottom","table","minWidth","tableWrapper","overflowX","border","clip","height","overflow","position","top","EnhancedTable","React","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","Table","aria-labelledby","size","aria-label","newSelecteds","n","TableBody","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","backIconButtonProps","nextIconButtonProps","onChangePage","newPage","onChangeRowsPerPage","parseInt","Switch","Home","serviceLocations","serviceLocation","Fragment","placeholder","vehicleNumber","bookedDate","Checkin","Config","bookingLimit","bookableDays","for","DescriptionRenderer","field","tasks","description","SORTERS","mapper","localeCompare","service","payload","result","Array","from","x","getSorter","Promise","resolve","task","push","find","t","filter","styles","ServiceCenter","caption","fetchItems","hideInCreateForm","render","message","trigger","submitText","validate","values","App","path","exact","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.387166d8.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport { Alert } from 'react-datepicker'\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport axios from 'axios'\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\n                Your Website\n      </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\nconst useStyles = makeStyles(theme => ({\n    '@global': {\n        body: {\n            backgroundColor: theme.palette.common.white,\n        },\n    },\n    paper: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(3),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignUp() {\n    const classes = useStyles();\n\n    const [state, setstate] = useState({\n        name: '',\n        phone: '',\n        email: '',\n        location: '',\n        username: '',\n        password: '',\n        errors: []\n    })\n    const onChangeName = e => {\n        setstate({\n            ...state, name: e.target.value\n        })\n    }\n\n    const onChangePhone = e => {\n        setstate({\n            ...state, phone: e.target.value\n        })\n    }\n\n    const onChangeEmail = e => {\n        setstate({\n            ...state, email: e.target.value\n        })\n    }\n\n    const onChangeLocation = e => {\n        setstate({\n            ...state, location: e.target.value\n        })\n    }\n\n    const onChangeUsername = e => {\n        setstate({\n            ...state, username: e.target.value\n        })\n    }\n\n\n    const onChangePassword = e => {\n        setstate({\n            ...state, password: e.target.value\n        })\n    }\n\n    const onSubmitHandler = e => {\n        const register = {\n            name: state.name,\n            phone: state.phone,\n            email: state.email,\n            location: state.location,\n            username: state.username,\n            password: state.password\n        }\n\n        axios.post('/register', register)\n            .then(req => console.log(req.data))\n            .catch(err => {\n                const errors = [...err.response.data.error]\n\n                setstate({ ...state, errors: { ...err.response.data.error } })\n                // err.response.data.error.map(error)\n                console.log(state.errors[0])\n            })\n\n        console.log(register)\n\n        setstate({\n            name: '', phone: '', email: '', location: '', username: '', password: ''\n        })\n        e.preventDefault()\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign up\n        </Typography>\n\n                <form className={classes.form} onSubmit={onSubmitHandler}>\n                    {/* Alert */}\n                    <div className=\"alert alert-primary invisible\" role=\"alert\">\n                        {state.errors[0]}\n                    </div>\n                    {/* Input Fields */}\n                    <Grid container spacing={2}>\n                        <Grid item xs={6}>\n                            <TextField\n                                value={state.name}\n                                onChange={onChangeName}\n                                autoComplete=\"name\"\n                                name=\"name\"\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"name\"\n                                label=\"Name\"\n                                autoFocus\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                value={state.phone}\n                                onChange={onChangePhone}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"phone\"\n                                label=\"Phone\"\n                                name=\"phone\"\n                                autoComplete=\"phone\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                value={state.email}\n                                onChange={onChangeEmail}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                id=\"email\"\n                                label=\"Email Address\"\n                                name=\"email\"\n                                autoComplete=\"email\"\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <TextField\n                                value={state.location}\n                                onChange={onChangeLocation}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"location\"\n                                label=\"Location\"\n                                type=\"location\"\n                                id=\"location\"\n                                autoComplete=\"location\"\n                            />\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                value={state.username}\n                                onChange={onChangeUsername}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"username\"\n                                label=\"Username\"\n                                type=\"username\"\n                                id=\"username\"\n                                autoComplete=\"username\"\n                            />\n\n                        </Grid>\n                        <Grid item xs={6}>\n                            <TextField\n                                value={state.password}\n                                onChange={onChangePassword}\n                                variant=\"outlined\"\n                                required\n                                fullWidth\n                                name=\"password\"\n                                label=\"Password\"\n                                type=\"password\"\n                                id=\"password\"\n                                autoComplete=\"current-password\"\n                            />\n                        </Grid>\n                        {/* <Grid item xs={12}>\n                            <FormControlLabel\n                                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                                label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                            />\n                        </Grid> */}\n                    </Grid>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign Up\n          </Button>\n                    <Grid container justify=\"flex-end\">\n                        <Grid item>\n                            <Link href=\"/login\" variant=\"body2\">\n                                Already have an account? Sign in\n              </Link>\n                        </Grid>\n                    </Grid>\n                </form>\n            </div>\n            <Box mt={5}>\n                <Copyright />\n            </Box>\n        </Container>\n    );\n}","import React, { useState } from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Link from \"@material-ui/core/Link\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  \"@global\": {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\"\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n\nexport default function SignIn() {\n  const classes = useStyles();\n\n  // Custom functions\n  const [state, setstate] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const onSubmitHandler = e => {\n    const user = {\n      username: state.username,\n      password: state.password\n    };\n\n    console.log(user);\n\n    setstate({\n      username: \"\",\n      password: \"\"\n    });\n    e.preventDefault();\n  };\n  const onChangeUsername = e => {\n    // Spread operator because hooks replace the whole object\n    // so copying the old object\n    setstate({ ...state, username: e.target.value });\n  };\n  const onChangePassword = e => {\n    // Spread operator because hooks replace the whole object\n    // so copying the old object\n    setstate({ ...state, password: e.target.value });\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form onSubmit={onSubmitHandler}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"username\"\n            label=\"Username\"\n            autoComplete=\"username\"\n            autoFocus\n            value={state.username}\n            onChange={onChangeUsername}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={state.password}\n            onChange={onChangePassword}\n          />\n          <FormControlLabel\n            control={<Checkbox value=\"remember\" color=\"primary\" />}\n            label=\"Remember me\"\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n          <Grid container>\n            <Grid item xs>\n              <Link href=\"#\" variant=\"body2\">\n                Forgot password?\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"/register\" variant=\"body2\">\n                {\"Don't have an account? Sign Up\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n","import React from 'react'\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap'\n\n\nexport default function Navigation() {\n    return (\n        <Navbar bg=\"light\" expand=\"sm\">\n            <Navbar.Brand href=\"/\">KTM Service Booking</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" expand={768} />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link href=\"/current\">Servicing</Nav.Link>\n                    <Nav.Link href=\"/inqueue\">Queue</Nav.Link>\n                    <Nav.Link href=\"/config\">BookingConfig</Nav.Link>\n\n                    <Nav.Link href=\"/service_center\">Service Centers</Nav.Link>\n                    <Nav.Link href=\"/login\" style={{ color: '#000' }}>Login</Nav.Link>\n\n                </Nav>\n                {/* <Form inline>\n                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                    <Button variant=\"outline-success\">Search</Button>\n                </Form> */}\n            </Navbar.Collapse>\n        </Navbar >\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nfunction createData(name, calories, fat, carbs, protein) {\n    return { name, calories, fat, carbs, protein };\n}\n\nconst rows = [\n    createData('BA 60 PA 3080', '11-21-2019', 'Pranav', 9818505260, 'Rs.15000'),\n    createData('BA 61 PA 1234', '11-22-2019', 'Bishnu', 9818260505, 'Rs.15000'),\n    createData('BA 62 PA 1234', '11-23-2019', 'Ravi', 9841787169, 'Rs.15000'),\n    createData('BA 63 PA 1243', '11-23-2019', 'Raju', 9800330021, 'Rs.15000'),\n    createData('BA 64 PA 1243', '11-23-2019', 'Romeo', 9849026656, 'Rs.15000'),\n    createData('BA 65 PA 1243', '11-23-2019', 'Pawan', 9849059770, 'Rs.15000'),\n    createData('BA 66 PA 1243', '11-23-2019', 'Shilu', 9818505260, 'Rs.15000'),\n    createData('BA 67 PA 1243', '11-23-2019', 'Jeet', 9818505260, 'Rs.15000'),\n    createData('BA 68 PA 1243', '11-23-2019', 'Barun', 9818505260, 'Rs.15000'),\n    createData('BA 69 PA 1243', '11-23-2019', 'Arun', 9818505260, 'Rs.15000'),\n    createData('BA 60 PA 1243', '11-23-2019', 'James', 9818505260, 'Rs.15000'),\n    createData('BA 71 PA 1243', '11-23-2019', 'Hari', 9818505260, 'Rs.15000'),\n    createData('BA 72 PA 1243', '11-23-2019', 'Girija', 9818505260, 'Rs.15000'),\n];\n\n// useEffect(() => {\n\n// }, [])\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n    { id: 'name', numeric: false, disablePadding: true, label: 'Vehicle Number' },\n    { id: 'calories', numeric: true, disablePadding: false, label: 'Booked Date' },\n    { id: 'fat', numeric: true, disablePadding: false, label: 'Name' },\n    { id: 'carbs', numeric: true, disablePadding: false, label: 'Phone' },\n    { id: 'protein', numeric: true, disablePadding: false, label: 'Total' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        // align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: '#fff',\n                backgroundColor: '#ff6600',\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = props => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} completed\n        </Typography>\n            ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n                        Current Servicing\n        </Typography>\n                )}\n\n            {/* Delete Button */}\n            {/* {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                )} */}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function EnhancedTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('calories');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === 'desc';\n        setOrder(isDesc ? 'asc' : 'desc');\n        setOrderBy(property);\n    };\n\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map(n => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = event => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = name => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <div className={classes.tableWrapper}>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            onClick={event => handleClick(event, row.name)}\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\">\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.name}\n                                            </TableCell>\n                                            <TableCell >{row.calories}</TableCell>\n                                            <TableCell >{row.fat}</TableCell>\n                                            <TableCell >{row.carbs}</TableCell>\n                                            <TableCell >{row.protein}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            />\n        </div>\n    );\n}","import React, { useState } from 'react'\nimport { FaCalendarCheck, FaFlagCheckered } from 'react-icons/fa';\nimport { IoIosTime } from 'react-icons/io';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport './Home.css'\n\nexport default function Home() {\n\n    const [state, setstate] = useState({\n        serviceLocations: ['Lazimpat', 'Lainchaur', 'Sohrakhuttey', 'Naxal']\n    })\n\n    const serviceLocation = state.serviceLocations.map(location => {\n        return (\n            <option>{location}</option>\n        )\n    })\n    const handleChange = date => {\n        setstate({\n            startDate: date\n        });\n    };\n\n    console.log(state.serviceLocations)\n    return (\n        <React.Fragment>\n            <div className=\"jumbotron img-container\">\n                <h3 className=\"display-4\">Book Servicing <br /> Remotely</h3>\n                <p className=\"text-primary\"><strong>Available Servicing Locations:</strong></p>\n                <div className=\"form-group row container\">\n\n                    <select className=\"form-control\" placeholder=\"asdf\" >\n                        {serviceLocation}\n                    </select>\n                    <a className=\"btn btn-primary mx-1\" href=\"/\" >Book</a>\n                </div>\n\n            </div>\n\n            <div className=\"container\">\n                <div className=\"row h-10\">\n                    <div className=\"col-lg-4 col-md-12 h-auto\">\n                        <div className=\"box-part text-center \">\n                            <FaCalendarCheck size='30' color='red' />\n                            <div className=\"card-title title\">\n                                <h4>Book Servicing Remotely</h4>\n                            </div>\n                            <div className=\"text\">\n                                <span>\n                                    Book for servicing queue remotely for any service center from anywhere you are\n                                    and wait for the admin to queue you up\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-4 col-md-12\">\n                        <div className=\"box-part text-center\">\n                            <IoIosTime size='30' color='blue' />\n                            <div className=\"card-title title\">\n                                <h4>Get Queued Up</h4>\n                            </div>\n                            <div className=\"text\">\n                                <span>\n                                    Wait for the admin to queue you up and return the\n                                    estimated checkin time for you to arrive with your vehicle\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"col-lg-4 col-md-12 h-25\">\n                        <div className=\"box-part text-center\">\n\n                            <FaFlagCheckered size='30' color='green' />\n                            <div className=\"card-title title\">\n                                <h4>Arrive at your Time</h4>\n                            </div>\n                            <div className=\"text\">\n                                <span>After getting your checkin time, arrive at your estimated time\n                                     and complete the process</span>\n                            </div>\n                        </div>\n                    </div>\n                </div></div></React.Fragment>\n    )\n}\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Switch from '@material-ui/core/Switch';\n\nfunction createData(vehicleNumber, bookedDate, Checkin, name, phone) {\n    return { vehicleNumber, bookedDate, Checkin, name, phone };\n}\n\nconst rows = [\n    createData('BA 60 PA 3080', '11-21-2019', '11-21-2019', 'Pranav', 9818505260),\n    createData('BA 61 PA 1234', '11-22-2019', '11-22-2019', 'Bishnu', 9818260505),\n    createData('BA 62 PA 1234', '11-23-2019', '11-23-2019', 'Ravi', 9841787169),\n    createData('BA 63 PA 1243', '11-23-2019', '11-23-2019', 'Raju', 9800330021),\n    createData('BA 64 PA 1243', '11-23-2019', '11-23-2019', 'Romeo', 9849026656),\n    createData('BA 65 PA 1243', '11-23-2019', '11-23-2019', 'Pawan', 9849059770),\n    createData('BA 66 PA 1243', '11-23-2019', '11-23-2019', 'Shilu', 981850526),\n    createData('BA 67 PA 1243', '11-23-2019', '11-23-2019', 'Jeet', 9818505260),\n    createData('BA 68 PA 1243', '11-23-2019', '11-23-2019', 'Barun', 9818505260),\n    createData('BA 69 PA 1243', '11-23-2019', '11-23-2019', 'Arun', 9818505260),\n    createData('BA 60 PA 1243', '11-23-2019', '11-23-2019', 'James', 9818505260),\n    createData('BA 71 PA 1243', '11-23-2019', '11-23-2019', 'Hari', 981850526),\n    createData('BA 72 PA 1243', '11-23-2019', '11-23-2019', 'Girija', 9818505260),\n];\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst headCells = [\n    { id: 'vehicleNumber', numeric: false, disablePadding: true, label: 'Vehicle Number' },\n    { id: 'bookedDate', numeric: false, disablePadding: false, label: 'Booked On' },\n    { id: 'Checkin', numeric: false, disablePadding: false, label: 'Checkin' },\n    { id: 'name', numeric: false, disablePadding: true, label: 'Name' },\n    { id: 'phone', numeric: false, disablePadding: false, label: 'Phone' },\n];\n\nfunction EnhancedTableHead(props) {\n    const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n    const createSortHandler = property => event => {\n        onRequestSort(event, property);\n    };\n\n    return (\n        <TableHead>\n            <TableRow>\n                <TableCell padding=\"checkbox\">\n                    <Checkbox\n                        indeterminate={numSelected > 0 && numSelected < rowCount}\n                        checked={numSelected === rowCount}\n                        onChange={onSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all desserts' }}\n                    />\n                </TableCell>\n                {headCells.map(headCell => (\n                    <TableCell\n                        key={headCell.id}\n                        // align={headCell.numeric ? 'right' : 'left'}\n                        padding={headCell.disablePadding ? 'none' : 'default'}\n                        sortDirection={orderBy === headCell.id ? order : false}\n                    >\n                        <TableSortLabel\n                            active={orderBy === headCell.id}\n                            direction={order}\n                            onClick={createSortHandler(headCell.id)}\n                        >\n                            {headCell.label}\n                            {orderBy === headCell.id ? (\n                                <span className={classes.visuallyHidden}>\n                                    {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                                </span>\n                            ) : null}\n                        </TableSortLabel>\n                    </TableCell>\n                ))}\n            </TableRow>\n        </TableHead>\n    );\n}\n\nEnhancedTableHead.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n    onRequestSort: PropTypes.func.isRequired,\n    onSelectAllClick: PropTypes.func.isRequired,\n    order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles(theme => ({\n    root: {\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(1),\n    },\n    highlight:\n        theme.palette.type === 'light'\n            ? {\n                color: '#fff',\n                backgroundColor: '#ff6600',\n            }\n            : {\n                color: theme.palette.text.primary,\n                backgroundColor: theme.palette.secondary.dark,\n            },\n    title: {\n        flex: '1 1 100%',\n    },\n}));\n\nconst EnhancedTableToolbar = props => {\n    const classes = useToolbarStyles();\n    const { numSelected } = props;\n\n    return (\n        <Toolbar\n            className={clsx(classes.root, {\n                [classes.highlight]: numSelected > 0,\n            })}\n        >\n            {numSelected > 0 ? (\n                <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\">\n                    {numSelected} completed\n        </Typography>\n            ) : (\n                    <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\">\n                        In Booking Queue\n        </Typography>\n                )}\n\n            <button className=\"btn btn-primary btn-lg\">Queue</button>\n            {/* Delete Button */}\n            {/* {numSelected > 0 ? (\n                <Tooltip title=\"Delete\">\n                    <IconButton aria-label=\"delete\">\n                        <DeleteIcon />\n                    </IconButton>\n                </Tooltip>\n            ) : (\n                    <Tooltip title=\"Filter list\">\n                        <IconButton aria-label=\"filter list\">\n                            <FilterListIcon />\n                        </IconButton>\n                    </Tooltip>\n                )} */}\n        </Toolbar>\n    );\n};\n\nEnhancedTableToolbar.propTypes = {\n    numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        width: '100%',\n        marginTop: theme.spacing(3),\n    },\n    paper: {\n        width: '100%',\n        marginBottom: theme.spacing(2),\n    },\n    table: {\n        minWidth: 750,\n\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: 'rect(0 0 0 0)',\n        height: 1,\n        margin: -1,\n        overflow: 'hidden',\n        padding: 0,\n        position: 'absolute',\n        top: 20,\n        width: 1,\n    },\n}));\n\nexport default function EnhancedTable() {\n    const classes = useStyles();\n    const [order, setOrder] = React.useState('asc');\n    const [orderBy, setOrderBy] = React.useState('bookedDate');\n    const [selected, setSelected] = React.useState([]);\n    const [page, setPage] = React.useState(0);\n    const [dense, setDense] = React.useState(false);\n    const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n    const handleRequestSort = (event, property) => {\n        const isDesc = orderBy === property && order === 'desc';\n        setOrder(isDesc ? 'asc' : 'desc');\n        setOrderBy(property);\n    };\n\n    // Select all\n    const handleSelectAllClick = event => {\n        if (event.target.checked) {\n            const newSelecteds = rows.map(n => n.name);\n            setSelected(newSelecteds);\n            return;\n        }\n        setSelected([]);\n    };\n\n    // individual select\n    const handleClick = (event, name) => {\n        const selectedIndex = selected.indexOf(name);\n        let newSelected = [];\n\n        if (selectedIndex === -1) {\n            newSelected = newSelected.concat(selected, name);\n        } else if (selectedIndex === 0) {\n            newSelected = newSelected.concat(selected.slice(1));\n        } else if (selectedIndex === selected.length - 1) {\n            newSelected = newSelected.concat(selected.slice(0, -1));\n        } else if (selectedIndex > 0) {\n            newSelected = newSelected.concat(\n                selected.slice(0, selectedIndex),\n                selected.slice(selectedIndex + 1),\n            );\n        }\n\n        setSelected(newSelected);\n    };\n\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    const handleChangeRowsPerPage = event => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0);\n    };\n\n    const handleChangeDense = event => {\n        setDense(event.target.checked);\n    };\n\n    const isSelected = name => selected.indexOf(name) !== -1;\n\n    const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n    return (\n        <div className={classes.root}>\n            <Paper className={classes.paper}>\n                <EnhancedTableToolbar numSelected={selected.length} />\n                <div className={classes.tableWrapper}>\n                    <Table\n                        className={classes.table}\n                        aria-labelledby=\"tableTitle\"\n                        size={dense ? 'small' : 'medium'}\n                        aria-label=\"enhanced table\"\n                    >\n                        <EnhancedTableHead\n                            classes={classes}\n                            numSelected={selected.length}\n                            order={order}\n                            orderBy={orderBy}\n                            onSelectAllClick={handleSelectAllClick}\n                            onRequestSort={handleRequestSort}\n                            rowCount={rows.length}\n                        />\n                        <TableBody>\n                            {stableSort(rows, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((row, index) => {\n                                    const isItemSelected = isSelected(row.name);\n                                    const labelId = `enhanced-table-checkbox-${index}`;\n\n                                    return (\n                                        <TableRow\n                                            hover\n                                            role=\"checkbox\"\n                                            aria-checked={isItemSelected}\n                                            tabIndex={-1}\n                                            key={row.name}\n                                            selected={isItemSelected}\n                                        >\n                                            <TableCell padding=\"checkbox\"\n                                                // Was in table row\n                                                onClick={event => handleClick(event, row.name)}\n                                            >\n                                                <Checkbox\n                                                    checked={isItemSelected}\n                                                    inputProps={{ 'aria-labelledby': labelId }}\n                                                />\n                                            </TableCell>\n                                            <TableCell component=\"th\" id={labelId} scope=\"row\" padding=\"none\">\n                                                {row.vehicleNumber}\n                                            </TableCell>\n                                            <TableCell >{row.bookedDate}</TableCell>\n                                            <TableCell ><input type='text' value={row.Checkin} className=\"py-1\" style={{ width: '120px ' }} /></TableCell>\n                                            <TableCell >{row.name}</TableCell>\n                                            <TableCell >{row.phone}</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    rowsPerPageOptions={[5, 10, 25]}\n                    component=\"div\"\n                    count={rows.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'previous page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'next page',\n                    }}\n                    onChangePage={handleChangePage}\n                    onChangeRowsPerPage={handleChangeRowsPerPage}\n                />\n            </Paper>\n            <FormControlLabel\n                control={<Switch checked={dense} onChange={handleChangeDense} />}\n                label=\"Dense padding\"\n            />\n        </div>\n    );\n}","import React, { useState } from 'react'\n\nexport default function Config() {\n\n    const [state, setstate] = useState({\n        bookingLimit: '20',\n        bookableDays: '4'\n    })\n\n    const onBookingLimit = e => {\n        setstate({\n            bookingLimit: e.target.value\n        })\n    }\n\n    const onBookableDays = e => {\n        setstate({\n            bookableDays: e.target.value\n        })\n    }\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                    <h2 className=\"my-3\"><strong>Booking Control Panel </strong></h2><br />\n                    <form>\n                        <div className=\"form-group\">\n                            <label for=\"bookingLimit\">Max Booking Limit</label>\n                            <input type=\"number\"\n                                className=\"form-control\"\n                                id=\"bookingLimit\"\n                                placeholder=\"eg: '20' bikes\"\n                                required\n                                value={state.bookingLimit}\n                                onChange={onBookingLimit} />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"bookableDays\">Max Bookable Days</label>\n                            <input type=\"number\"\n                                className=\"form-control\"\n                                name=\"bookableDays\"\n                                id=\"pbookableDays\"\n                                placeholder=\"eg: '4' days\"\n                                required\n                                value={state.bookableDays}\n                                onChange={onBookableDays} />\n                        </div>\n                        <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                    </form>\n                </div>\n            </div>\n        </div >\n    )\n}\n","import React from \"react\";\nimport CRUDTable, {\n  Fields,\n  Field,\n  CreateForm,\n  UpdateForm,\n  DeleteForm\n} from \"react-crud-table\";\nimport './ServiceLocation.css'\nimport { MdDelete, MdEdit } from 'react-icons/md'\nimport { AiOutlineUserAdd } from 'react-icons/ai'\n\nconst DescriptionRenderer = ({ field }) => <textarea {...field} />;\n\nlet tasks = [\n  {\n    id: 1,\n    title: \"Create an example\",\n    description: \"Create an example of how to use the component\"\n  },\n  {\n    id: 2,\n    title: \"Improve\",\n    description: \"Improve the component!\"\n  }\n];\n\nconst SORTERS = {\n  NUMBER_ASCENDING: mapper => (a, b) => mapper(a) - mapper(b),\n  NUMBER_DESCENDING: mapper => (a, b) => mapper(b) - mapper(a),\n  STRING_ASCENDING: mapper => (a, b) => mapper(a).localeCompare(mapper(b)),\n  STRING_DESCENDING: mapper => (a, b) => mapper(b).localeCompare(mapper(a))\n};\n\nconst getSorter = data => {\n  const mapper = x => x[data.field];\n  let sorter = SORTERS.STRING_ASCENDING(mapper);\n\n  if (data.field === \"id\") {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.NUMBER_ASCENDING(mapper)\n        : SORTERS.NUMBER_DESCENDING(mapper);\n  } else {\n    sorter =\n      data.direction === \"ascending\"\n        ? SORTERS.STRING_ASCENDING(mapper)\n        : SORTERS.STRING_DESCENDING(mapper);\n  }\n\n  return sorter;\n};\n\nlet count = tasks.length;\nconst service = {\n  fetchItems: payload => {\n    let result = Array.from(tasks);\n    result = result.sort(getSorter(payload.sort));\n    return Promise.resolve(result);\n  },\n  create: task => {\n    count += 1;\n    tasks.push({\n      ...task,\n      id: count\n    });\n    return Promise.resolve(task);\n  },\n  update: data => {\n    const task = tasks.find(t => t.id === data.id);\n    task.title = data.title;\n    task.description = data.description;\n    return Promise.resolve(task);\n  },\n  delete: data => {\n    const task = tasks.find(t => t.id === data.id);\n    tasks = tasks.filter(t => t.id !== task.id);\n    return Promise.resolve(task);\n  }\n};\n\nconst styles = {\n  container: { margin: \"auto\", width: \"fit-content\" }\n};\n\nconst ServiceCenter = () => (\n  <div style={styles.container}>\n    <CRUDTable\n      caption=\"Tasks\"\n      fetchItems={payload => service.fetchItems(payload)}\n    >\n      <Fields>\n        <Field name=\"id\" label=\"Id\" hideInCreateForm />\n        <Field name=\"title\" label=\"Title\" placeholder=\"Title\" />\n        <Field\n          name=\"description\"\n          label=\"Description\"\n          render={DescriptionRenderer}\n        />\n      </Fields>\n      <CreateForm\n        title=\"Task Creation\"\n        message=\"Create a new task!\"\n        trigger=\"Create Task\"\n        onSubmit={task => service.create(task)}\n        submitText=\"Create\"\n        validate={values => {\n          const errors = {};\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <UpdateForm\n        title=\"Task Update Process\"\n        message=\"Update task\"\n        trigger=\"Update\"\n        onSubmit={task => service.update(task)}\n        submitText=\"Update\"\n        validate={values => {\n          const errors = {};\n\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n\n          if (!values.title) {\n            errors.title = \"Please, provide task's title\";\n          }\n\n          if (!values.description) {\n            errors.description = \"Please, provide task's description\";\n          }\n\n          return errors;\n        }}\n      />\n\n      <DeleteForm\n        title=\"Task Delete Process\"\n        message=\"Are you sure you want to delete the task?\"\n        trigger=\"Delete\"\n        onSubmit={task => service.delete(task)}\n        submitText=\"Delete\"\n        validate={values => {\n          const errors = {};\n          if (!values.id) {\n            errors.id = \"Please, provide id\";\n          }\n          return errors;\n        }}\n      />\n    </CRUDTable>\n  </div>\n);\nexport default ServiceCenter;\n","import React from 'react';\nimport './App.css';\nimport UserRegistration from './components/UserRegistration';\nimport Login from './components/Login'\nimport Navigation from './components/Navigation';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport CurrentBooking from './components/CurrentBooking';\nimport Home from './components/Home';\nimport Inqueue from './components/InQueue';\nimport Config from './components/Config';\nimport ServiceCenter from './components/ServiceLocation'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navigation />\n      <Router>\n        <Switch>\n          <Route path=\"/\" exact>\n            <Home />\n          </Route>\n          <Route path=\"/current\">\n            <CurrentBooking />\n          </Route>\n          <Route path=\"/inqueue\">\n            <Inqueue />\n          </Route>\n          <Route path=\"/service_center\">\n            <ServiceCenter />\n          </Route>\n          <Route path=\"/config\">\n            <Config />\n          </Route>\n          <Route path=\"/list\">\n            <Inqueue />\n          </Route>\n          <Route path=\"/login\">\n            <Login />\n          </Route>\n          <Route path=\"/register\">\n            <UserRegistration />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}